library(ggplot2)
library(e1071)
library(lmtest)
library(MASS)
library(class)
library(pheatmap)
library(ROSE)
library(pROC)
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
# gets rid of the id
# changes the predictors to factors
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$ever_married = as.factor(data$ever_married)
data$work_type = as.factor(data$work_type)
data$Residence_type = as.factor(data$Residence_type)
data$smoking_status = as.factor(data$smoking_status)
data$stroke = as.factor(data$stroke)
data$bmi = as.numeric(data$bmi)
data = na.omit(data)
prop.table(table(data$stroke))
set.seed(1)
n = dim(data)[1]
dt = sort(sample(n, n*.7))
training = data[dt,]
testing = data[-dt,]
# train = seq(from = 1, to = n, by = 2)
# training = data[train, ]
# testing = data[-train, ]
#
# training = as.data.frame(training)
# testing = as.data.frame(testing)
set.seed(1)
syn_train = ROSE(stroke~.,data=training)$data
table(syn_train$stroke)
syn_test = ROSE(stroke~.,data=testing)$data
table(syn_test$stroke)
num_train = syn_train
num_test = syn_test
num_train$gender = as.numeric(as.factor(num_train$gender))
num_train$ever_married = as.numeric(as.factor(num_train$ever_married))
num_train$work_type = as.numeric(as.factor(num_train$work_type))
num_train$Residence_type = as.numeric(as.factor(num_train$Residence_type))
num_train$smoking_status = as.numeric(as.factor(num_train$smoking_status))
num_test$gender = as.numeric(as.factor(num_test$gender))
num_test$ever_married = as.numeric(as.factor(num_test$ever_married))
num_test$work_type = as.numeric(as.factor(num_test$work_type))
num_test$Residence_type = as.numeric(as.factor(num_test$Residence_type))
num_test$smoking_status = as.numeric(as.factor(num_test$smoking_status))
n = dim(data)[1]
past_smoked_data = data[data$smoking_status == "formerly smoked", ]
past_smoked_prob = dim(past_smoked_data[past_smoked_data$stroke == 1, ])[1]/ n
never_smoked_data = data[data$smoking_status == "never smoked", ]
never_smoked_prob = dim(never_smoked_data[never_smoked_data$stroke == 1, ])[1]/ n
smokes_data = data[data$smoking_status == "smokes", ]
smokes_prob = dim(smokes_data[smokes_data$stroke == 1, ])[1]/ n
u_smoke_data = data[data$smoking_status == "Unknown", ]
u_smoke_prob = dim(u_smoke_data[u_smoke_data$stroke == 1, ])[1]/ n
smoking_status = c("formerly smoked", "never smoked", "smokes", "unknown")
smoking_prob = c(round(past_smoked_prob, 3), round(never_smoked_prob, 3), round(smokes_prob, 3), round(u_smoke_prob, 3))
smoking_data = as.data.frame(cbind(smoking_status, smoking_prob))
ggplot(data = smoking_data) +
geom_bar(stat="identity", aes(x=smoking_status, y = smoking_prob,
color=smoking_status)) +
xlab("Smoking Status") + ylab("Stroke Probability") +
ggtitle("Stroke Probability Given Smoking Status")
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(cor_data$stroke)
cors = cor(cor_data)
cor_df = data.frame(as.table(cors))
ggplot(data=cor_df, mapping=aes(Var1, Var2))+
geom_tile(mapping = aes(fill = Freq)) +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1)) + ggtitle("Correlation Heatmap")
# performs radial support vector machine
#svm.rad = tune(svm, stroke~., data = training, kernel = "linear",
#ranges = list(cost = c(0.1, 10, 1000), degree = c(1,2,3,5),
#gamma = c(0.01,1,10)))
#svm.best = svm.rad$best.model
# best model: cost = 1000, gamma = 0.01, degree = 1
svm.best = svm(stroke~., data = syn_train, kernel = 'linear',
cost = 1, gamma = 0.01, degree =1)
# predicts on the testing set
svm.pred = predict(svm.best, syn_test)
table(predicted = svm.pred, truth = syn_test$stroke) # confusion matrix
svm_error = (230+142) / n
svm_error
library(ROSE)
set.seed(1)
trainrose<-ROSE(stroke~.,data=training)$data
table(trainrose$stroke)
full_logistic = glm(stroke~., data = trainrose, family = "binomial")
probs <- predict(full_logistic, type = "response", testing)
library(ggplot2)
library(e1071)
library(lmtest)
library(MASS)
library(class)
library(pheatmap)
library(ROSE)
library(pROC)
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
# gets rid of the id
# changes the predictors to factors
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$ever_married = as.factor(data$ever_married)
data$work_type = as.factor(data$work_type)
data$Residence_type = as.factor(data$Residence_type)
data$smoking_status = as.factor(data$smoking_status)
data$stroke = as.factor(data$stroke)
data$bmi = as.numeric(data$bmi)
data = na.omit(data)
prop.table(table(data$stroke))
library(ggplot2)
library(e1071)
library(lmtest)
library(MASS)
library(class)
library(pheatmap)
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
data = subset(data, select = -c(id)) # gets rid of the id
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
#data = subset(data, select = -c(id)) # gets rid of the id
# changes the predictors to factors
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$ever_married = as.factor(data$ever_married)
data$work_type = as.factor(data$work_type)
data$Residence_type = as.factor(data$Residence_type)
data$smoking_status = as.factor(data$smoking_status)
data$stroke = as.factor(data$stroke)
data$bmi = as.numeric(data$bmi)
prop.table(table(data$stroke))
data = na.omit(data)
# splits the data into a testing and training set
set.seed(1)
n = dim(data)[1]
train = seq(from = 1, to = n, by = 2)
training = data[train, ]
testing = data[-train, ]
training = as.data.frame(training)
testing = as.data.frame(testing)
library(ggplot2)
library(e1071)
library(lmtest)
library(MASS)
library(class)
library(pheatmap)
library(ROSE)
library(pROC)
library(ggthemes)
library(ggplot2)
library(e1071)
library(lmtest)
library(MASS)
library(class)
library(pheatmap)
library(ROSE)
library(pROC)
library(ggthemes)
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
library(ggplot2)
library(e1071)
library(lmtest)
library(MASS)
library(class)
library(pheatmap)
library(ROSE)
library(pROC)
library(ggthemes)
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
data = subset(data, select = -c(id)) # gets rid of the id
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
#data = subset(data, select = -c(id)) # gets rid of the id
# changes the predictors to factors
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$ever_married = as.factor(data$ever_married)
data$work_type = as.factor(data$work_type)
data$Residence_type = as.factor(data$Residence_type)
data$smoking_status = as.factor(data$smoking_status)
data$stroke = as.factor(data$stroke)
data$bmi = as.numeric(data$bmi)
data = na.omit(data)
str(data)
prop.table(table(data$stroke))
set.seed(1)
n = dim(data)[1]
dt = sort(sample(n, n*.7))
training = data[dt,]
testing = data[-dt,]
ggplot(data=data, aes(x=stroke, color = stroke)) + geom_bar(aes(fill= stroke)) + ggtitle("Stroke Class Distribution") + scale_fill_brewer(palette = "Set1")
set.seed(1)
syn_train = ROSE(stroke~.,data=training)$data
table(syn_train$stroke)
syn_test = ROSE(stroke~.,data=testing)$data
table(syn_test$stroke)
num_train = syn_train
num_test = syn_test
num_train$gender = as.numeric(as.factor(num_train$gender))
num_train$ever_married = as.numeric(as.factor(num_train$ever_married))
num_train$work_type = as.numeric(as.factor(num_train$work_type))
num_train$Residence_type = as.numeric(as.factor(num_train$Residence_type))
num_train$smoking_status = as.numeric(as.factor(num_train$smoking_status))
num_test$gender = as.numeric(as.factor(num_test$gender))
num_test$ever_married = as.numeric(as.factor(num_test$ever_married))
num_test$work_type = as.numeric(as.factor(num_test$work_type))
num_test$Residence_type = as.numeric(as.factor(num_test$Residence_type))
num_test$smoking_status = as.numeric(as.factor(num_test$smoking_status))
ggplot(data=syn_train, aes(x=stroke, color = stroke)) + geom_bar(aes(fill= stroke)) + ggtitle("Rose data") + scale_fill_brewer(palette = "Set1")
n = dim(data)[1]
past_smoked_data = data[data$smoking_status == "formerly smoked", ]
past_smoked_prob = dim(past_smoked_data[past_smoked_data$stroke == 1, ])[1]/
dim(past_smoked_data)[1]
past_smoked_no_stroke = dim(past_smoked_data[past_smoked_data$stroke == 0, ])[1]/ dim(past_smoked_data)[1]
never_smoked_data = data[data$smoking_status == "never smoked", ]
never_smoked_prob = dim(never_smoked_data[never_smoked_data$stroke == 1, ])[1]/
dim(never_smoked_data)[1]
never_smoked_no_stroke = dim(never_smoked_data[never_smoked_data$stroke == 0, ])[1]/ dim(never_smoked_data)[1]
smokes_data = data[data$smoking_status == "smokes", ]
smokes_prob = dim(smokes_data[smokes_data$stroke == 1, ])[1]/
dim(smokes_data)[1]
smokes_no_stroke = dim(smokes_data[smokes_data$stroke == 0, ])[1]/
dim(smokes_data)[1]
u_smoke_data = data[data$smoking_status == "Unknown", ]
u_smoke_prob = dim(u_smoke_data[u_smoke_data$stroke == 1, ])[1]/
dim(u_smoke_data)[1]
u_smoke_no_stroke = dim(u_smoke_data[u_smoke_data$stroke == 0, ])[1]/
dim(u_smoke_data)[1]
smoking_status = c("formerly smoked", "never smoked", "smokes", "unknown",
"formerly smoked", "never smoked", "smokes", "unknown")
stroke_status = c("Stroke", "Stroke", "Stroke", "Stroke", "No Stroke",
"No Stroke", "No Stroke", "No Stroke")
smoking_prob = c(round(past_smoked_prob, 3), round(never_smoked_prob, 3),
round(smokes_prob, 3), round(u_smoke_prob, 3),
round(past_smoked_no_stroke, 3),
round(never_smoked_no_stroke, 3), round(smokes_no_stroke, 3),
round(u_smoke_no_stroke, 3))
smoking_data = as.data.frame(cbind(smoking_status, stroke_status,
smoking_prob))
ggplot(smoking_data, aes(fill=stroke_status, y=smoking_prob,
x=smoking_status)) +
geom_bar(position = position_stack(reverse = TRUE), stat="identity") +
xlab("Smoking Status") + ylab("Stroke Probability") +
ggtitle("Stroke Probability Given Smoking Status") +
scale_fill_brewer(palette = "Set1")
library(devtools)
install_github("vqv/ggbiplot")
require(tidyverse)
require(ggbiplot)
require(ggthemes)
set.seed(123)
data <- num_train[, !names(syn_train) %in% c("stroke")]
str(data)
data$hypertension <- as.numeric(data$hypertension)
data$heart_disease <- as.numeric(data$heart_disease)
df.pca <- prcomp(data)
pca_2 <- df.pca$x %>%
as.tibble %>%
select(PC1, PC2)
pca_kmeans <- pca_2 %>%
kmeans(centers = 2)
pca_kmeans$betweenss/pca_kmeans$totss##accuracy
ggbiplot(df.pca, groups = factor(pca_kmeans$cluster),
ellipse = TRUE) +
theme_tufte(base_size = 14) +
geom_point(aes(col = factor(pca_kmeans$cluster)),
size = 2, alpha = 0.2) +
theme(legend.position = 'top') +
scale_color_manual(name = 'K-Means Group of Patient',
values = c('#a6cee3', '#e31a1c')) +
ggtitle('K-Means Clustering of First Two Principal Components')
library(devtools)
#install_github("vqv/ggbiplot")
require(tidyverse)
require(ggbiplot)
require(ggthemes)
set.seed(123)
data <- num_train[, !names(syn_train) %in% c("stroke")]
str(data)
data$hypertension <- as.numeric(data$hypertension)
data$heart_disease <- as.numeric(data$heart_disease)
df.pca <- prcomp(data)
pca_2 <- df.pca$x %>%
as.tibble %>%
select(PC1, PC2)
pca_kmeans <- pca_2 %>%
kmeans(centers = 2)
pca_kmeans$betweenss/pca_kmeans$totss##accuracy
ggbiplot(df.pca, groups = factor(pca_kmeans$cluster),
ellipse = TRUE) +
theme_tufte(base_size = 14) +
geom_point(aes(col = factor(pca_kmeans$cluster)),
size = 2, alpha = 0.2) +
theme(legend.position = 'top') +
scale_color_manual(name = 'K-Means Group of Patient',
values = c('#a6cee3', '#e31a1c')) +
ggtitle('K-Means Clustering of First Two Principal Components')
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(cor_data$stroke)
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(cor_data$stroke)
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.factor(cor_data$stroke)
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.factor(cor_data$stroke)
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(cor_data$stroke)
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(data$stroke)
data = read.csv("healthcare-dataset-stroke-data.csv") # reads data file
#data = subset(data, select = -c(id)) # gets rid of the id
# changes the predictors to factors
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$ever_married = as.factor(data$ever_married)
data$work_type = as.factor(data$work_type)
data$Residence_type = as.factor(data$Residence_type)
data$smoking_status = as.factor(data$smoking_status)
data$stroke = as.factor(data$stroke)
data$bmi = as.numeric(data$bmi)
data = na.omit(data)
str(data)
prop.table(table(data$stroke))
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(data$stroke)
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(data$stroke)
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(data$stroke)
cors = cor(cor_data)
cor_df = data.frame(as.table(cors))
ggplot(data=cor_df, mapping=aes(Var1, Var2))+
geom_tile(mapping = aes(fill = Freq)) +
scale_fill_gradient2(low = "red3", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1)) + ggtitle("Correlation Heatmap") + scale_x_discrete(guide = guide_axis(angle=45))
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(data$stroke)
cors = cor(cor_data)
cor_df = data.frame(as.table(cors))
ggplot(data=cor_df, mapping=aes(Var1, Var2))+
geom_tile(mapping = aes(fill = Freq)) +
scale_fill_gradient2(low = "red3", high = "dodgerblue3s", mid = "white",
midpoint = 0, limit = c(-1,1)) + ggtitle("Correlation Heatmap") + scale_x_discrete(guide = guide_axis(angle=45))
cor_data = data
cor_data$gender = as.numeric(cor_data$gender)
cor_data$hypertension = as.numeric(cor_data$hypertension)
cor_data$heart_disease = as.numeric(cor_data$heart_disease)
cor_data$ever_married = as.numeric(cor_data$ever_married)
cor_data$work_type = as.numeric(cor_data$work_type)
cor_data$Residence_type = as.numeric(cor_data$Residence_type)
cor_data$smoking_status = as.numeric(cor_data$smoking_status)
cor_data$stroke = as.numeric(data$stroke)
cors = cor(cor_data)
cor_df = data.frame(as.table(cors))
ggplot(data=cor_df, mapping=aes(Var1, Var2))+
geom_tile(mapping = aes(fill = Freq)) +
scale_fill_gradient2(low = "red3", high = "blue3", mid = "white",
midpoint = 0, limit = c(-1,1)) + ggtitle("Correlation Heatmap") + scale_x_discrete(guide = guide_axis(angle=45))
